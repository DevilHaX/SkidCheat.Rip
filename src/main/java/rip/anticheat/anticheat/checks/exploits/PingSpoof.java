/*
 * Decompiled with CFR 0_122.
 * 
 * Could not load the following classes:
 *  org.bukkit.entity.Player
 *  org.bukkit.event.EventHandler
 *  org.bukkit.event.EventPriority
 */
package rip.anticheat.anticheat.checks.exploits;

import org.bukkit.entity.Player;
import org.bukkit.event.EventHandler;
import org.bukkit.event.EventPriority;
import rip.anticheat.anticheat.AntiCheat;
import rip.anticheat.anticheat.PlayerStats;
import rip.anticheat.anticheat.Violation;
import rip.anticheat.anticheat.ViolationPriority;
import rip.anticheat.anticheat.checks.Check;
import rip.anticheat.anticheat.checks.CheckType;
import rip.anticheat.anticheat.events.PacketPlayerEvent;

public class PingSpoof
extends Check {
    public PingSpoof(AntiCheat antiCheat) {
        super(antiCheat, CheckType.OTHER, "PingSpoof", "Ping Spoof", 100, 50, 2, 0);
    }

    @EventHandler(priority=EventPriority.MONITOR)
    public void PacketPlayer(PacketPlayerEvent packetPlayerEvent) {
        if (!this.isEnabled()) {
            return;
        }
        Player player = packetPlayerEvent.getPlayer();
        PlayerStats playerStats = this.getCore().getPlayerStats(player);
        if (playerStats.getLastReceivedKeepAlive() == 0) {
            return;
        }
        if (playerStats.getLastDelayedPacketDiff() < 500) {
            return;
        }
        long l = System.currentTimeMillis() - playerStats.getLastReceivedKeepAlive();
        long l2 = System.currentTimeMillis() - playerStats.getLastSentKeepAlive();
        int n = playerStats.getCheck(this, 0);
        int n2 = this.getThreshold();
        n = l > 7000 && l2 < 3000 ? (n += 3) : (n -= 20);
        if (n > n2) {
            this.getCore().addViolation(player, this, new Violation(this, ViolationPriority.LOW, "*"));
            n = 0;
        }
        playerStats.setCheck(this, 0, n);
    }
}

